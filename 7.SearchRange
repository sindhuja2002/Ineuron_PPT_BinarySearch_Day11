#question 7
def searchRange(nums, target):
    def findLeftmost(nums, target):
        left = 0
        right = len(nums) - 1
        index = -1

        while left <= right:
            mid = left + (right - left) // 2

            if nums[mid] >= target:
                right = mid - 1
            else:
                left = mid + 1

            if nums[mid] == target:
                index = mid

        return index

    def findRightmost(nums, target):
        left = 0
        right = len(nums) - 1
        index = -1

        while left <= right:
            mid = left + (right - left) // 2

            if nums[mid] <= target:
                left = mid + 1
            else:
                right = mid - 1

            if nums[mid] == target:
                index = mid

        return index

    leftmost = findLeftmost(nums, target)
    rightmost = findRightmost(nums, target)

    return [leftmost, rightmost]

# Test cases
print(searchRange([5, 7, 7, 8, 8, 10], 8))  # Output: [3, 4]
print(searchRange([5, 7, 7, 8, 8, 10], 6))  # Output: [-1, -1]
print(searchRange([], 0))  # Output: [-1, -1]

#TC - O(logn)
#SC - O(1)
